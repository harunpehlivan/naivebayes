source('~/.active-rstudio-document', echo=TRUE)
x
norm
norm(x)
x^2
x*x
sum(x*x)
x.*y
x**y
source('~/ICME_la.R', echo=TRUE)
x**y
36*#6
adf
36*36
x %*% y
xy = x %*% y
type(xy)
typeof(xy)
xy
x %*% y
outer(x,y,FUN="*")
x %o% y
t(x)
as.matrix(x)
norm(as.matrix(v))
v = c(3,-2,6)
as.matrix(v)
norm(as.matrix(v))
?norm
norm(as.matrix(v), "2")
norm(as.matrix(v), "F")
X = matrix(data = c(1,2,3,4), ncol=2)
X
X = matrix(data = c(1,2,3,4), ncol=1)
X
X = matrix(data = c(1,2,3,4), ncol=3)
X = matrix(data = c(1,2,3,4), ncol=2)
X = matrix(data = c(1,2,3,4), ncol=2); X
X = matrix(data = c(1,2,3,4), ncol=2)
Y = matrix(data = c(1,2,3,4), ncol=2, byrow=T)
X+Y
t(X)
t(X) %*% X
t(X) %*% X %*% Y
Z = matrix(data = c(1,-2,1,3),2,2)
d <- c(1,2,3,4)
D <- diag(d)
D
I <- diag(4); I
A = matrix(c(2,1,1,2),2,2)
y = eigen(A)
y
$val
y$val
y$vecto
y$vec %*% diag(y$*$val) %*% t(y$vec)
y$vec %*% diag(y%*%val) %*% t(y$vec)
y$vec %*% diag(y$val) %*% t(y$vec)
A = matrix(data=1:6, nrow=2)
A
B = matrix(data=1:6, ncol=2, bycol=T)
B = matrix(data=1:6, ncol=2, byrow=T)
B
B = matrix(data=1:6, ncol=2)
B
A %*% B
t(A)[,1]
A
t(A[,1])
t(A)[,1] %*% B[,1]
A[,1] %*% B[,1]
t(A)[,1] %*% B[,2]
?punif
dunif(3, 1, 6)
dunif(4, 1, 6)
d6 = runif(1000, 1, 6) + runif(1000, 1, 6) +runif(1000, 1, 6) +runif(1000, 1, 6) +runif(1000, 1, 6) +runif(1000, 1, 6)
hist(d6)
?rep
Subject = 1:100
Gender = c(rep("male", 50), rep("female", 50))
Education = rep(c(rep("HS",20),rep("College",20)), 2)
Education = rep(c(rep("HS",25),rep("College",25)), 2)
dat = cbind(Subject=subj, Gender=gend, Education=educ)
subj = 1:100
gend = c(rep("male", 50), rep("female", 50))
educ = rep(c(rep("HS",25),rep("College",25)), 2)
dat = cbind(Subject=subj, Gender=gend, Education=educ)
summary(dat)
dat = as.data.frame(cbind(Subject=subj, Gender=gend, Education=educ))
names(dat)
summary(dat)
money = 5000*rnorm(100)
money = 50000*rnorm(100)
?rnorm
money = rnorm(100, mean=50000, sd=1000)
summary(money)
with(dat, summary(lm(money ~ Education*Gender)))
money = rnorm(100, mean=50000, sd=2000)
with(dat, summary(lm(money ~ Education*Gender)))
subj = 1:100
gend = c(rep("male", 50), rep("female", 50))
educ = rep(c(rep("HS",25),rep("College",25)), 2)
inco = c(rnorm(25, 39.470,2),
rnorm(25, 84.536,2),
rnorm(25, 25.962,2),
rnorm(25, 54.297,2))
dat = as.data.frame(cbind(Subject=subj, Gender=gend, Education=educ, Income=inco))
summary(dat)
?data.frame
dat = data.frame(Subject=subj, Gender=gend, Education=educ, Income=inco)
summary(dat)
gend2 = gend[1:80]
subj = 1:100
gend = c(rep("male", 50), rep("female", 50))
educ = rep(c(rep("HS",25),rep("College",25)), 2)
inco = c(rnorm(25, 39.470,2),
rnorm(25, 84.536,2),
rnorm(25, 25.962,2),
rnorm(25, 54.297,2))
dat = data.frame(Subject=subj, Gender=gend, Education=educ, Income=inco)
mod = with(dat, lm(Income ~ Gender*Education))
dat$GenderSum = C(dat$Gender)
dat$EducationSum = C(dat$Gender)
mod.c = with(dat, lm(Income ~ GenderSum*EducationSum))
print(summary(mod))
print(summary(mod.c))
subj2 = 1:80
gend2 = gend[1:80]
educ2 = educ[1:80]
inco2 = inco[1:80]
dat2 = data.frame(Subject=subj2, Gender=gend2, Education=educ2, Income=inco2)
mod2 = with(dat2, lm(Income ~ Gender*Education))
dat2$GenderSum = C(dat2$Gender)
dat2$EducationSum = C(dat2$Education)
mod2.c = with(dat2, lm(Income ~ GenderSum*EducationSum))
print(summary(mod2))
print(summary(mod2.c))
?C
dat$GenderSum = C(dat$Gender,sum)
dat$EducationSum = C(dat$Gender,sum)
mod.c = with(dat, lm(Income ~ GenderSum*EducationSum))
dat2$GenderSum = C(dat2$Gender,sum)
dat2$EducationSum = C(dat2$Education,sum)
mod2.c = with(dat2, lm(Income ~ GenderSum*EducationSum))
print(summary(mod))
print(summary(mod.c))
contrasts(dat$GenderSum)
contrasts(dat$EducationSum)
dat$GenderSum = C(dat$Gender,sum)
dat$EducationSum = C(dat$Education,sum)
mod.c = with(dat, lm(Income ~ GenderSum*EducationSum))
print(summary(mod))
print(summary(mod.c))
dat2$GenderSum = C(dat2$Gender,sum)
dat2$EducationSum = C(dat2$Education,sum)
mod2.c = with(dat2, lm(Income ~ GenderSum*EducationSum))
print(summary(mod2))
print(summary(mod2.c))
summary(dat2)
?lmer
library(lme4)
?lmer
?glmer
binomial
?to.n
install.packages("rjags")
setwd("~/Documents/research/diss_data/permutation_tests/permutation_results")
setwd("~/corpus/gender_convos")
ratios
ratios = read.csv("speeddate_fr_or_tests.csv")
head(ratios)
with(ratios, plot(perms_fr, nb_fr))
with(ratios, lm(nb_fr ~ perms_fr))
with(ratios, plot(perms_fr, perms_pval))
with(ratios, hist(perms_fr))
?hist
with(ratios, hist(perms_fr, breaks=10))
with(ratios, hist(perms_fr, breaks=100))
with(ratios, hist(perms_fr, breaks=50))
with(ratios, hist(perms_fr, breaks=20))
with(ratios, hist(or_f))
with(ratios, hist(perms_fr, breaks=10))
with(ratios, hist(perms_fr, main="fratio distribution, SpeedDate Corpus", ylab="fratio"))
with(ratios, hist(perms_fr, main="Distribution of fratio, SpeedDate Corpus", xlab="fratio"))
pdf("fratio_distribution_example.pdf", 5, 5)
with(ratios, hist(perms_fr, main="Distribution of fratio, SpeedDate Corpus", xlab="fratio"))
dev.off()
fucked = read.csv('fucked_up_fratio.csv')
names(fucked)
head(fucked)
with(fucked, plot(right_fratio, wrong_fratio))
with(fucked, summary(lm(right_fratio, wrong_fratio)))
with(fucked, summary(lm(wrong_fratio ~ right_fratio)))
?any
with(fucked, all(is.infinite(wrong_fratio) == is.infinite(right_fratio)))
fucked_noinf = fucked[which(!is.infinite(fucked$wrong_fratio)),]
with(fucked_noinf, plot(right_fratio, wrong_fratio))
with(fucked, plot(right_fratio, wrong_fratio))
with(fucked_noinf, summary(lm(wrong_fratio ~ right_fratio)))
with(fucked_noinf, mean(wrong_fratio / right_fratio))
with(fucked_noinf, min(abs(wrong_fratio)))
with(fucked_noinf, min(abs(right_fratio)))
with(fucked_noinf, (lm(wrong_fratio ~ right_fratio)))
with(fucked, hist(wrong_fratio))
with(fucked, hist(right_fratio))
with(fucked, hist(wrong_fratio))
with(fucked, hist(right_fratio))
with(fucked, hist(wrong_fratio))
with(fucked, hist(wrong_fratio,breaks=10))
with(fucked, hist(right_fratio,breaks=10))
with(fucked, hist(right_fratio,breaks=100))
with(fucked, hist(right_fratio,breaks=100))
with(fucked, hist(wrong_fratio,breaks=100))
with(fucked, hist(right_fratio,breaks=100))
with(fucked, hist(wrong_fratio,breaks=100))
with(fucked, hist(right_fratio,breaks=100))
with(fucked, hist(wrong_fratio,breaks=100))
with(fucked, hist(right_fratio,breaks=100))
with(fucked, hist(wrong_fratio,breaks=100))
setwd("~/Documents/other_research/naivebayes")
library(ggplot2)
hlfreqs = read.csv("hl_freq_tests.csv")
names(hlfreqs)
?aes
ggplot(hlfreqs, aes(x=ncols, y=score, color=as.factor(lowest_freq))) +
geom_point() +
scale_colour_manual(values=cbPalette)
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
ggplot(hlfreqs, aes(x=ncols, y=score, color=as.factor(lowest_freq))) +
geom_point() +
scale_colour_manual(values=cbPalette)
?geom_point
ggplot(hlfreqs, aes(x=ncols, y=score, color=as.factor(lowest_freq))) +
geom_point()
warnings()
ggplot(hlfreqs, aes(x=ncols, y=score, color=as.factor(highest_freq))) +
geom_point()
hlfreqs[which(hlfreqs$score<0.1 & hlfreqs$ncols>20000),]
?as.factor
ggplot(hlfreqs, aes(x=ncols, y=score, color=highest_freq)) +
geom_point()
ggplot(hlfreqs, aes(x=ncols, y=score, color=lowest_freq)) +
geom_point()
?scale_y_continuous
ggplot(hlfreqs, aes(x=ncols, y=score, color=lowest_freq)) +
geom_point() +
scale_y_log10()
ggplot(hlfreqs, aes(x=ncols, y=score, color=lowest_freq)) +
geom_point() +
scale_x_log10()
ggplot(hlfreqs[which(hlfreqs$low_idx<20),], aes(x=ncols, y=score, color=lowest_freq)) +
geom_point() +
scale_x_log10()
ggplot(hlfreqs[which(hlfreqs$low_idx<20&hlfreqs$high_idx<20),], aes(x=ncols, y=score, color=lowest_freq)) +
geom_point() +
scale_x_log10()
ggplot(hlfreqs[which(hlfreqs$low_idx<50&hlfreqs$high_idx<10),], aes(x=ncols, y=score, color=lowest_freq)) +
geom_point() +
scale_x_log10()
names(hlfreqs)
ggplot(hlfreqs, aes(x=lowest_freq, y=score, color=highest_freq)) +
geom_point()
ggplot(hlfreqs, aes(x=lowest_freq, y=score, color=highest_freq)) +
geom_point(position="dodge") +
scale_x_log10()
ggplot(hlfreqs, aes(x=lowest_freq, y=score, color=highest_freq)) +
geom_point(position="jitter") +
scale_x_log10()
ggplot(hlfreqs, aes(x=lowest_freq, y=score, alpha=highest_freq)) +
geom_point(position="jitter") +
scale_x_log10()
ggplot(hlfreqs, aes(x=lowest_freq, y=highest_freq, alpha=score)) +
geom_point(position="jitter") +
scale_x_log10() +
scale_y_log10()
ggplot(hlfreqs, aes(x=lowest_freq, y=score, alpha=1/highest_freq)) +
geom_point(position="jitter") +
scale_x_log10()
ggplot(hlfreqs, aes(x=low_idx, y=score, alpha=1/high_idx)) +
geom_point(position="jitter")
ggplot(hlfreqs, aes(x=low_idx, y=score, alpha=1-high_idx)) +
geom_point(position="jitter")
ggplot(hlfreqs, aes(x=low_idx, y=high_idx, alpha=score)) +
geom_point(position="jitter")
ggplot(hlfreqs[which(hlfreqs$high_idx=0),], aes(x=lowest_freq, y=score)) +
geom_point(position="jitter") +
scale_x_log10()
which(hlfreqs$high_idx=0)
ggplot(hlfreqs[which(hlfreqs$high_idx==0),], aes(x=lowest_freq, y=score)) +
geom_point(position="jitter") +
scale_x_log10()
ggplot(hlfreqs[which(hlfreqs$high_idx==1),], aes(x=lowest_freq, y=score)) +
geom_point(position="jitter") +
scale_x_log10()
ggplot(hlfreqs[which(hlfreqs$high_idx==1),], aes(x=lowest_freq, y=score)) +
geom_line() +
scale_x_log10()
ggplot(hlfreqs[which(hlfreqs$high_idx==0),], aes(x=lowest_freq, y=score)) +
geom_line() +
scale_x_log10()
ggplot(hlfreqs[which(hlfreqs$high_idx==0),], aes(x=lowest_freq, y=score)) +
geom_point() +
scale_x_log10(limits=(1, max(hlfreqs$lowest_freq)))
ggplot(hlfreqs[which(hlfreqs$high_idx==0),], aes(x=lowest_freq, y=score)) +
geom_point() +
scale_x_log10(limits=(c(1, max(hlfreqs$lowest_freq))))
ggplot(hlfreqs[which(hlfreqs$high_idx==1),], aes(x=lowest_freq, y=score)) +
geom_point() +
scale_x_log10(limits=(c(1, max(hlfreqs$lowest_freq))))
hi = 1
paste(c("low_freq_hi_",hi,".pdf"),sep="")
paste("low_freq_hi_",hi,".pdf",sep="")
pdf(paste("low_freq_hi_",hi,".pdf",sep=""))
ggplot(hlfreqs[which(hlfreqs$high_idx==hi),], aes(x=lowest_freq, y=score)) +
geom_point() +
scale_x_log10(limits=(c(1, max(hlfreqs$lowest_freq))))
dev.off()
for (hi in 1:100) {
pdf(paste("low_freq_hi_",hi,".pdf",sep=""))
ggplot(hlfreqs[which(hlfreqs$high_idx==hi),], aes(x=lowest_freq, y=score)) +
geom_point() +
scale_y_continuous(limits=c(0,1))
scale_x_log10(limits=(c(1, max(hlfreqs$lowest_freq))))
dev.off()
}
ggplot(hlfreqs[which(hlfreqs$high_idx==hi),], aes(x=lowest_freq, y=score)) +
geom_point() +
scale_y_continuous(limits=c(0,1))
scale_x_log10(limits=(c(1, max(hlfreqs$lowest_freq))))
hi
pdf(paste("low_freq_hi_",hi,".pdf",sep=""))
ggplot(hlfreqs[which(hlfreqs$high_idx==hi),], aes(x=lowest_freq, y=score)) +
geom_point() +
scale_y_continuous(limits=c(0,1))
scale_x_log10(limits=(c(1, max(hlfreqs$lowest_freq))))
dev.off()
pdf(paste("low_freq_hi_",hi,".pdf",sep=""))
ggplot(hlfreqs[which(hlfreqs$high_idx==hi),], aes(x=lowest_freq, y=score)) +
geom_point() +
scale_y_continuous(limits=c(0,1)) +
scale_x_log10(limits=(c(1, max(hlfreqs$lowest_freq))))
dev.off()
fname = paste("low_freq_hi_",hi,".pdf",sep="")
pdf(fname, height=8, width=8)
ggplot(hlfreqs[which(hlfreqs$high_idx==hi),], aes(x=lowest_freq, y=score)) +
geom_point() +
scale_y_continuous(limits=c(0,1)) +
scale_x_log10(limits=(c(1, max(hlfreqs$lowest_freq))))
dev.off()
for (hi in 1:100) {
fname = paste("low_freq_hi_",hi,".pdf",sep="")
pdf(fname, height=8, width=8)
ggplot(hlfreqs[which(hlfreqs$high_idx==hi),], aes(x=lowest_freq, y=score)) +
geom_point() +
scale_y_continuous(limits=c(0,1)) +
scale_x_log10(limits=(c(1, max(hlfreqs$lowest_freq))))
dev.off()
}
fname = paste("low_freq_hi_",hi,".pdf",sep="")
pdf(fname, height=8, width=8)
ggplot(hlfreqs[which(hlfreqs$high_idx==hi),], aes(x=lowest_freq, y=score)) +
geom_point() +
scale_y_continuous(limits=c(0,1)) +
scale_x_log10(limits=(c(1, max(hlfreqs$lowest_freq))))
sleep(5)
dev.off()
sleep(5)
library(sys)
fname = paste("low_freq_hi_",hi,".pdf",sep="")
pdf(fname, height=8, width=8)
ggplot(hlfreqs[which(hlfreqs$high_idx==hi),], aes(x=lowest_freq, y=score)) +
geom_point() +
scale_y_continuous(limits=c(0,1)) +
scale_x_log10(limits=(c(1, max(hlfreqs$lowest_freq))))
Sys.sleep(5)
dev.off()
Sys.sleep(5)
for (hi in 1:100) {
fname = paste("low_freq_hi_",hi,".pdf",sep="")
print(fname)
pdf(fname, height=8, width=8)
ggplot(hlfreqs[which(hlfreqs$high_idx==hi),], aes(x=lowest_freq, y=score)) +
geom_point() +
scale_y_continuous(limits=c(0,1)) +
scale_x_log10(limits=(c(1, max(hlfreqs$lowest_freq))))
Sys.sleep(2)
dev.off()
Sys.sleep(2)
}
fname = paste("low_freq_hi_",hi,".png",sep="")
print(fname)
png(fname, height=8, width=8)
ggplot(hlfreqs[which(hlfreqs$high_idx==hi),], aes(x=lowest_freq, y=score)) +
geom_point() +
scale_y_continuous(limits=c(0,1)) +
scale_x_log10(limits=(c(1, max(hlfreqs$lowest_freq))))
Sys.sleep(2)
dev.off()
Sys.sleep(2)
png(fname)
ggplot(hlfreqs[which(hlfreqs$high_idx==hi),], aes(x=lowest_freq, y=score)) +
geom_point() +
scale_y_continuous(limits=c(0,1)) +
scale_x_log10(limits=(c(1, max(hlfreqs$lowest_freq))))
Sys.sleep(2)
dev.off()
Sys.sleep(2)
for (hi in 1:100) {
fname = paste("low_freq_hi_",hi,".png",sep="")
print(fname)
png(fname)
ggplot(hlfreqs[which(hlfreqs$high_idx==hi),], aes(x=lowest_freq, y=score)) +
geom_point() +
scale_y_continuous(limits=c(0,1)) +
scale_x_log10(limits=(c(1, max(hlfreqs$lowest_freq))))
Sys.sleep(2)
dev.off()
Sys.sleep(2)
}
warnings()
for (hi in 1:100) {
fname = paste("low_freq_hi_",hi,".png",sep="")
print(fname)
png(fname)
p = ggplot(hlfreqs[which(hlfreqs$high_idx==hi),], aes(x=lowest_freq, y=score)) +
geom_point() +
scale_y_continuous(limits=c(0,1)) +
scale_x_log10(limits=(c(1, max(hlfreqs$lowest_freq))))
print(p)
dev.off()
}
ggplot(hlfreqs, aes(x=ncols, y=score)) +
geom_point() +
scale_x_log10(limits=(c(1, max(hlfreqs$ncols))))
ggplot(hlfreqs[which(hlfreqs$high_idx==0)], aes(x=ncols, y=score)) +
geom_point() +
scale_x_log10(limits=(c(1, max(hlfreqs$ncols))))
ggplot(hlfreqs[which(hlfreqs$high_idx==0),], aes(x=ncols, y=score)) +
geom_point() +
scale_x_log10(limits=(c(1, max(hlfreqs$ncols))))
ggplot(hlfreqs[which(hlfreqs$high_idx==1),], aes(x=ncols, y=score)) +
geom_point() +
scale_x_log10(limits=(c(1, max(hlfreqs$ncols))))
onedown = hlfreqs[which(hlfreqs$high_idx==1),]
lines(lowess(hlfreqs$ncols, hlfreqs$score))
